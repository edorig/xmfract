
lambdafn

      z(0) = pixel
      z(n+1) = lambda * fn(z(n)).

    Three parameters: real, imag portions of lambda, and fn


Function=[sin|cos|sinh|cosh|exp|log|sqr|...]) is specified with this type.
Prior to version 14, these types were lambdasine, lambdacos, lambdasinh,
lambdacos, and lambdaexp. Where we say "lambdasine" or some such below,
the good reader knows we mean "lambdafn with function=sin".)

These types calculate the Julia set of the formula lambda*fn(Z), for
various values of the function "fn", where lambda and Z are both complex.
Two values, the real and imaginary parts of lambda, should be given in the
"params=" option. For the feathery, nested spirals of LambdaSines and the
frost-on-glass patterns of LambdaCosines, make the real part = 1, and try
values for the imaginary part ranging from 0.1 to 0.4 (hint: values near
0.4 have the best patterns). In these ranges the Julia set "explodes". For
the tongues and blobs of LambdaExponents, try a real part of 0.379 and an
imaginary part of 0.479.

Each LambdaSine/Cosine iteration calculates a hyperbolic sine, hyperbolic
cosine,  sine, and a cosine (the LambdaExponent iteration "only" requires
an exponent, sine, and cosine operation). Generation of these fractals may
take a considerable length of time.

