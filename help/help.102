
plasma

    Random, cloud-like formations. Requires 4 or more colors.

    A recursive algorithm repeatedly subdivides the screen and
    colors pixels according to an average of surrounding pixels
    and a random color, less random as the grid size decreases.
    Four parameters: 'graininess' (.5 to 50, default = 2), old/new
    algorithm, seed value used, 16-bit out output selection.


Plasma clouds ARE real live fractals, even though we didn't know it at
first. They are generated by a recursive algorithm that randomly picks
colors of the corner of a rectangle, and then continues recursively
quartering previous rectangles. Random colors are averaged with those of
the outer rectangles so that small neighborhoods do not show much change,
for a smoothed-out, cloud-like effect. The more colors your display
supports, the better. The result, believe it or not, is a fractal
landscape viewed as a contour map, with colors indicating constant
elevation. To see this, save and view with the <3> command (see "3D" Images)
and your "cloud" will be converted to a mountain!

You've GOT to try color cycling on these (hit "+" or "-"). If you
haven't been hypnotized by the drawing process, the writhing colors will
do it for sure. We have now implemented subliminal messages to exploit the
user's vulnerable state; their content varies with your bank balance,
politics, gender, accessibility to an xmfract programmer, and so on. A
free copy of Microsoft C to the first person who spots them.

This type accepts four parameters.

The first determines how abruptly the colors change. A value of .5 yields
bland clouds, while 50 yields very grainy ones. The default value is 2.

The second determines whether to use the original algorithm (0) or a
modified one (1). The new one gives the same type of images but draws
the dots in a different order. It will let you see
what the final image will look like much sooner than the old one.

The third determines whether to use a new seed for generating the
next plasma cloud (0) or to use the previous seed (1).

The fourth parameter turns on 16-bit .POT output which provides much
smoother height gradations. This is especially useful for creating
mountain landscapes when using the plasma output with a ray tracer
such as POV-Ray.

With parameter three set to 1, the next plasma cloud generated will be
identical to the previous but at whatever new resolution is desired.

Zooming is ignored, as each plasma-cloud screen is generated randomly.

The random number seed used for each plasma image is displayed on the
<tab> information screen, and can be entered with the command line
parameter "rseed=" to recreate a particular image.

The algorithm is based on the Pascal program distributed by Bret Mulvey as
plasma.arc. We have ported it to C and integrated it with xmfract's
graphics and animation facilities.

Saved plasma-cloud screens are EXCELLENT starting images for fractal
"landscapes" created with the "3D" commands.

